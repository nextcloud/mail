sudo: required
dist: xenial
language: php
php:
  - 7.3
  - 7.4

services:
  - docker
  - mysql
  - postgresql

env:
  global:
  - CORE_BRANCH=master
  - PHP_COVERAGE=FALSE
  - TEST_SUITE=TEST-PHP
  - DB=mysql
  - PATCH_VERSION_CHECK=FALSE
  matrix:

matrix:
  include:
    - php: 7.4
      env: "DB=pgsql"
    - php: 7.4
      env: "TEST_SUITE=TEST-JS"
    - php: 7.4
      env: "TEST_SUITE=PACKAGE"
    - php: 7.3
      env: "PHP_COVERAGE=TRUE"
    - php: 7.3
      env: "CORE_BRANCH=stable20"
    - php: nightly
      env: "DB=sqlite PATCH_VERSION_CHECK=TRUE"
  fast_finish: true
  allow_failures:
    - php: nightly

branches:
  only:
  - master
  - "/^stable\\d+(\\.\\d+)?$/"
  - /^v\d++(\.\d+)?+(\.\d+)?+(\.\d+)?$/

cache:
  directories:
  - "$HOME/.composer/cache/files"
  - "$HOME/.npm"

before_install:
  - php --info

  # Install Krankerl
  - if [[ "$TEST_SUITE" = "PACKAGE" ]]; then wget https://github.com/ChristophWurst/krankerl/releases/download/v0.12.2/krankerl_0.12.2_amd64.deb; fi
  - if [[ "$TEST_SUITE" = "PACKAGE" ]]; then sudo dpkg -i krankerl_0.12.2_amd64.deb; fi

  # Set up DB
  - if [[ "$DB" == 'pgsql' ]]; then createuser -U travis -s oc_autotest; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e 'create database oc_autotest;'; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e "CREATE USER 'oc_autotest'@'localhost' IDENTIFIED BY '';"; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e "GRANT ALL ON oc_autotest.* TO 'oc_autotest'@'localhost';"; fi

  - make install-composer-deps-dev
  - make start-imap-docker
  - make start-smtp-docker
  - cd ..
  - git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b $CORE_BRANCH core
  - if [[ "$PATCH_VERSION_CHECK" = "TRUE" ]]; then echo "<?php" > core/lib/versioncheck.php; fi
  - if [[ "$PATCH_VERSION_CHECK" = "TRUE" ]]; then  sed -ri 's/(<php min\-version="[0-9\.]+") max\-version="[0-9\.]+"/\1/g' mail/appinfo/info.xml; fi
  - mv mail core/apps/

before_script:
  # Set up core
  - php -f core/occ maintenance:install --database-name oc_autotest --database-user oc_autotest --admin-user admin --admin-pass admin --database $DB --database-pass=''

  # Set up app
  - php -f core/occ app:enable mail
  # Enable app twice to check occ errors of registered commands
  - php -f core/occ app:enable mail
  # Turn off TLS verification here as the test server is not trusted
  - php -f core/occ config:system:set app.mail.verify-tls-peer --type bool --value false

  - cd core/apps/mail
  - sh -c "if [ '$TEST_SUITE' = 'TEST-JS' ]; then npm install -g npm@latest; fi"
  - sh -c "if [ '$TEST_SUITE' = 'TEST-JS' ]; then make dev-setup; fi"

  # Prepare IMAP test docker
  - make add-imap-account

  # XDebug is only needed if we report coverage -> speeds up other builds
  - if [[ "$PHP_COVERAGE" = "FALSE" ]]; then phpenv config-rm xdebug.ini || true; fi

  # Print running docker images, just to verify they did not crash
  - docker ps

script:
  # Run JS tests
  - sh -c "if [ '$TEST_SUITE' = 'TEST-JS' ]; then npm test; fi"
  # - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then cat ./coverage/*/lcov.info | ./node_modules/coveralls/bin/coveralls.js; fi"

  # Run PHP tests
  - composer test:integration
  - if [[ "$PHP_COVERAGE" = "TRUE" ]]; then wget https://scrutinizer-ci.com/ocular.phar; fi
  - if [[ "$PHP_COVERAGE" = "TRUE" ]]; then php ocular.phar code-coverage:upload --format=php-clover tests/clover.integration.xml; fi

  # Test packaging
  - if [[ "$TEST_SUITE" = "PACKAGE" ]]; then make appstore; fi


