sudo: required
dist: trusty
language: php
php:
  - 7.1
  - 7.2

addons:
  apt:
    packages:
    - mysql-server-5.6
    - mysql-client-core-5.6
    - mysql-client-5.6
    - php5-pgsql
    - libxml2-utils

services:
  - docker
  - postgresql

env:
  global:
  - CORE_BRANCH=master
  - TEST_JS=FALSE
  - PHP_COVERAGE=FALSE
  - PACKAGE=FALSE
  - NIGHTLY=FALSE
  matrix:
  - DB=sqlite

matrix:
  include:
    - php: 7.1
      env: "DB=mysql CORE_BRANCH=master TEST_JS=TRUE"
    - php: 7.1
      env: "DB=mysql CORE_BRANCH=master PACKAGE=TRUE"
    - php: 7.1
      env: "DB=pgsql PHP_COVERAGE=TRUE"
    - php: 7.0
      env: "DB=pgsql CORE_BRANCH=stable15"
    - php: 7.1
      env: "DB=pgsql CORE_BRANCH=v15.0.0"
    - php: 7.2
      env: "DB=pgsql PHP_COVERAGE=TRUE"
  fast_finish: true

branches:
  only:
  - master
  - "/^stable\\d+(\\.\\d+)?$/"
  - /^v\d++(\.\d+)?+(\.\d+)?+(\.\d+)?$/
  - refactor/vue

cache:
  directories:
  - "$HOME/.composer/cache/files"
  - "$HOME/.npm"

before_install:
  - php --info

  # Set up DB
  - if [[ "$DB" == 'pgsql' ]]; then createuser -U travis -s oc_autotest; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e 'create database oc_autotest;'; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e "CREATE USER 'oc_autotest'@'localhost' IDENTIFIED BY '';"; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e "GRANT ALL ON oc_autotest.* TO 'oc_autotest'@'localhost';"; fi

  - composer self-update
  - make install-composer-deps-dev
  - make start-imap-docker
  - make start-smtp-docker
  - cd ..
  - git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b $CORE_BRANCH core
  - mv mail core/apps/

before_script:
  # Set up core
  - php -f core/occ maintenance:install --database-name oc_autotest --database-user oc_autotest --admin-user admin --admin-pass admin --database $DB --database-pass=''

  # Set up app
  - php -f core/occ app:enable mail
  # Enable app twice to check occ errors of registered commands
  - php -f core/occ app:enable mail
  - cd core/apps/mail
  - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then npm install -g npm@latest; fi"
  - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then make dev-setup; fi"

  # Prepare IMAP test docker
  - make add-imap-account

  # XDebug is only needed if we report coverage -> speeds up other builds
  - if [[ "$PHP_COVERAGE" = "FALSE" ]]; then phpenv config-rm xdebug.ini; fi

  # Print running docker images, just to verify they did not crash
  - docker ps

script:
  # Check info.xml schema validity
  - wget https://apps.nextcloud.com/schema/apps/info.xsd
  - xmllint appinfo/info.xml --schema info.xsd --noout
  - rm info.xsd

  # Check PHP syntax errors
  - find . -name \*.php -not -path './vendor/*' -exec php -l "{}" \;

  # Run server's app code checker
  # TODO: enable once table renames are possible
  - php ../../occ app:check-code mail

  # Run JS tests
  - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then npm test; fi"
  # - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then cat ./coverage/*/lcov.info | ./node_modules/coveralls/bin/coveralls.js; fi"

  # Run PHP tests
  - composer run test
  - if [[ "$PHP_COVERAGE" = "TRUE" ]]; then wget https://scrutinizer-ci.com/ocular.phar;
    fi
  - if [[ "$PHP_COVERAGE" = "TRUE" ]]; then php ocular.phar code-coverage:upload --format=php-clover
    tests/clover.xml; fi

  # Test packaging
  - if [[ "$PACKAGE" = "TRUE" ]]; then make appstore; fi

  # Upload the nightly to ftp server
  - if [[ "$NIGHTLY" = "TRUE" ]]; then curl --ftp-create-dirs -T /home/travis/build/nextcloud/core/apps/mail/build/artifacts/mail.tar.gz -u $FTP_LOGIN:$FTP_PW ftp://upload.portknox.de/htdocs/mail/nextcloud_mail_nightly_build_$(date +%Y-%m-%d).tar.gz; fi

